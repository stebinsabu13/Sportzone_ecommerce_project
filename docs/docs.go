// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {}
            }
        },
        "/admin/category": {
            "get": {
                "description": "LISTING ALL CATEGORIES FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN USER"
                ],
                "summary": "API FOR LISTING ALL CATEGORIES",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/category/add": {
            "post": {
                "description": "ADDING CATEGORY FROM ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR ADDING CATEGORY",
                "operationId": "ADMIN-ADD-CATEGORY",
                "parameters": [
                    {
                        "description": "Enter the category name",
                        "name": "category_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.AddCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/category/delete/{categoryid}": {
            "delete": {
                "description": "DELETING CATEGORY AND ALSO CHECKING WHETHER IT HAS A EXISTING PRODUCT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR DELETING A CATEGORY",
                "operationId": "ADMIN-DELETE-CATEGORY",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the category id that you would like to delete",
                        "name": "categoryid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/coupon": {
            "get": {
                "description": "VIEWING COUPONS IN THE ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR VIEWING ALL COUPON",
                "operationId": "ADMIN-VIEW-COUPON",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Enter the number of coupons to retrieve",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResWidgets"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/coupon/add": {
            "post": {
                "description": "ADDING COUPONS IN THE ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR ADDING THE COUPON",
                "operationId": "ADMIN-ADD-COUPON",
                "parameters": [
                    {
                        "description": "Enter the details of the coupon",
                        "name": "coupon_details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/utils.BodyAddCoupon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResWidgets"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/coupon/delete/{couponid}": {
            "delete": {
                "description": "DELETING COUPON IN THE ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR DELETING COUPON",
                "operationId": "ADMIN-COUPON-DELETION",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the coupon id to delete",
                        "name": "couponid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResWidgets"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/coupon/update": {
            "patch": {
                "description": "UPDATING COUPONS IN THE ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR UPDATING COUPON",
                "operationId": "ADMIN-UPDATING-COUPON",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the coupon id to update",
                        "name": "couponid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Enter the body of the coupon",
                        "name": "coupon_details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/utils.BodyAddCoupon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResWidgets"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/coupon/{couponid}": {
            "get": {
                "description": "VIEWING COUPON BY ID IN THE ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR VIEWING COUPON BY ID",
                "operationId": "ADMIN-COUPON-BY-ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the coupon id to view",
                        "name": "couponid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResWidgets"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/dashboard": {
            "get": {
                "description": "VIEWING DIFFERENT WIDGETS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR VIEWING THE DASHBOARD",
                "operationId": "ADMIN-VIEW-DASHBOARD",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResWidgets"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "description": "VERIFY THE EMAIL,PASSWORD AND GENERATE A JWT TOKEN AND SET IT TO A COOKIE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR ADMIN LOGIN",
                "operationId": "ADMIN-LOGIN",
                "parameters": [
                    {
                        "description": "Enter the email and password",
                        "name": "login_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.BodyLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/logout": {
            "post": {
                "description": "ADMIN LOGOUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR ADMIN LOGOUT",
                "operationId": "ADMIN-LOGOUT",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/order": {
            "get": {
                "description": "Admin can view all orders.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR VIEWING ALL ORDERS",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/order/detail": {
            "get": {
                "description": "Users can the selected order details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN USER"
                ],
                "summary": "API FOR VIEWING ORDERS DETAILS",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the order id",
                        "name": "orderid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/order/update/status": {
            "post": {
                "description": "Admin can change the ststus of orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR CHANGING THE STATUS OF A ORDER",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the order details id",
                        "name": "orderdetailid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the status id",
                        "name": "statusid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/product": {
            "get": {
                "description": "LISTING ALL PRODUCTS FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN USER"
                ],
                "summary": "API FOR LISTING ALL PRODUCTS",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/add": {
            "post": {
                "description": "ADDING PRODUCT FROM ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR ADDING PRODUCT",
                "operationId": "ADMIN-ADD-PRODUCT",
                "parameters": [
                    {
                        "description": "Enter the product details",
                        "name": "product_details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/utils.AddProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/bybrands/{brandid}": {
            "get": {
                "description": "LISTING ALL PRODUCTS FROM ADMINS AND USERS END BASED ON BRANDS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN USER"
                ],
                "summary": "API FOR LISTING ALL PRODUCTS BASED ON CATEGBRANDSORY",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the brand id",
                        "name": "brandid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/bycategory/{categoryid}": {
            "get": {
                "description": "LISTING ALL PRODUCTS FROM ADMINS AND USERS END BASED ON CATEGORY",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN USER"
                ],
                "summary": "API FOR LISTING ALL PRODUCTS BASED ON CATEGORY",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the category id",
                        "name": "categoryid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/delete/{productid}": {
            "post": {
                "description": "DELETING PRODUCT BASED ON PRODUCT ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR DELETING A PRODUCT",
                "operationId": "ADMIN-DELETE-PRODUCT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id that you would like to delete",
                        "name": "productid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/detail/add": {
            "post": {
                "description": "ADDING PRODUCT DETAILS FROM ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR ADDING PRODUCT DETAILS",
                "operationId": "ADMIN-ADD-PRODUCT-DETAILS",
                "parameters": [
                    {
                        "description": "Enter the product details",
                        "name": "product_details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/utils.AddProductDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/detail/delete/{productdetailid}": {
            "delete": {
                "description": "DELETING PRODUCT DETAILS FROM ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR DELETE PRODUCT DETAILS",
                "operationId": "ADMIN-DELETE-PRODUCT-DETAILS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product details id that you would like to delete",
                        "name": "productdetailid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/detail/update/{productdetailid}": {
            "patch": {
                "description": "UPDATING PRODUCT DETAILS FROM ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR EDITING PRODUCT DETAILS",
                "operationId": "ADMIN-EDIT-PRODUCT-DETAILS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product details id that you would like to make the change",
                        "name": "productdetailid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enter the product details",
                        "name": "product_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.AddProductDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/detail/{productid}": {
            "get": {
                "description": "LISTING ALL PRODUCTS DETAILS FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN USER"
                ],
                "summary": "API FOR LISTING PRODUCTS DETAILS BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id that you would like to see the details of",
                        "name": "productid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/update/{productid}": {
            "patch": {
                "description": "UPDATING PRODUCT DETAILS FROM ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR EDITING PRODUCT",
                "operationId": "ADMIN-EDIT-PRODUCT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id that you would like to make the change",
                        "name": "productid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enter the category details",
                        "name": "product_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.AddProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/sales": {
            "get": {
                "description": "ADMIN SALES REPORT, VIA MONTHLY AND YEARLY",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR GETTING SALES REPORT",
                "operationId": "ADMIN-SALES-REPORT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter frequency",
                        "name": "frequency",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the month",
                        "name": "month",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Enter the year",
                        "name": "year",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/signup": {
            "post": {
                "description": "CREATE A NEW ADMIN WITH REQUIRED DETAILS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR NEW ADMIN SIGN UP",
                "operationId": "SIGNUP-ADMIN",
                "parameters": [
                    {
                        "description": "New Admin Details",
                        "name": "admin_details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/utils.BodySignUpuser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/signup/otp/verify": {
            "post": {
                "description": "VERIFY THE OTP AND UPDATE THE VERIFIED COLUMN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR NEW ADMIN SIGN UP OTP VERIFICATION",
                "operationId": "SIGNUP-ADMIN-OTP-VERIFY",
                "parameters": [
                    {
                        "description": "otp",
                        "name": "otp_details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/utils.Otpverify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "get": {
                "description": "LISTING ALL EXISTING USERS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR LISTING USERS",
                "operationId": "ADMIN-LIST-USERS",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/user/{userid}/make": {
            "patch": {
                "description": "GRANTING ACCESS FOR INDIVIDUAL USERS.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR BLOCKING/UNBLOCKING USERS",
                "operationId": "ADMIN-ACCESS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the specific user id",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Enter true/false",
                        "name": "access",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/cart": {
            "get": {
                "description": "LISTING CART AND ITEMS FROM USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR DISPLAYING CART TO USER",
                "operationId": "USER-LIST-CART",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/cart/add": {
            "put": {
                "description": "ADDING ITEMS TO CART FROM USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR ADDING PRODUCTS TO CART BY USER",
                "operationId": "USER-ADD-TO-CART",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/cart/remove": {
            "put": {
                "description": "REMOVING ITEMS FROM CART FROM USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR REMOVING PRODUCTS TO CART BY USER",
                "operationId": "USER-REMOVE-FROM-CART",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/checkout/add": {
            "get": {
                "description": "Users can place a new order with the cart items.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR PLACING A NEW ORDER",
                "operationId": "USER-PROCEED-ORDER",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the payment id",
                        "name": "paymentid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Enter the address id",
                        "name": "addressid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "If you have a coupon,Enter the coupon code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/filter/brands": {
            "get": {
                "description": "LISTING ALL BRANDS USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR LISTING ALL BRANDS",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/filter/brands/{brandid}/products": {
            "get": {
                "description": "LISTING ALL PRODUCTS FROM ADMINS AND USERS END BASED ON BRANDS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN USER"
                ],
                "summary": "API FOR LISTING ALL PRODUCTS BASED ON CATEGBRANDSORY",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the brand id",
                        "name": "brandid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/filter/category": {
            "get": {
                "description": "LISTING ALL CATEGORIES FROM USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR LISTING ALL CATEGORIES",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/filter/category/{categoryid}/products": {
            "get": {
                "description": "LISTING ALL PRODUCTS FROM ADMINS AND USERS END BASED ON CATEGORY",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN USER"
                ],
                "summary": "API FOR LISTING ALL PRODUCTS BASED ON CATEGORY",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the category id",
                        "name": "categoryid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/forgot/password": {
            "post": {
                "description": "VERIFY THE EMAIL AND NUMBER AND FIND THE DATA. SEND THE OTP AND VERIFY WITH NEW PASSWORD AND OTP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR USER FORGOT PASSWORD OPTION",
                "operationId": "USER-FORGOT-PASSWORD",
                "parameters": [
                    {
                        "description": "Enter the email and phoneNumber",
                        "name": "login_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.OtpLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/forgot/password/otp/verify": {
            "patch": {
                "description": "VERIFY THE OTP AND ENTER A NEW PASSWORD",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR USER FORGOT PASSWORD OTP VERIFICATION",
                "operationId": "USER-FORGOT-PASSWORD-OTP-VERIFY",
                "parameters": [
                    {
                        "description": "Enter the Otp and New Password",
                        "name": "verify_details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/utils.Otpverify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "VERIFY THE EMAIL,PASSWORD AND GENERATE A JWT TOKEN AND SET IT TO A COOKIE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR USER LOGIN",
                "operationId": "USER-LOGIN",
                "parameters": [
                    {
                        "description": "Enter the email and password",
                        "name": "login_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.BodyLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/login/otp": {
            "post": {
                "description": "LOGIN A USER USING OTP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR USER LOGIN USING OTP",
                "operationId": "LOGIN-USER-OTP",
                "parameters": [
                    {
                        "description": "Enter email and mobile number",
                        "name": "user_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.OtpLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/login/otp/verify": {
            "post": {
                "description": "VERIFY THE OTP AND MAKE THE USER LOGGED IN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR USER LOGIN OTP VERIFICATION",
                "operationId": "LOGIN-USER-OTP-VERIFY",
                "parameters": [
                    {
                        "description": "otp",
                        "name": "otp_details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/utils.Otpverify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "description": "LOGOUT USER AND ALSO CLEAR COOKIES",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR USER LOGOUT",
                "operationId": "USER-LOGOUT",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/orders": {
            "get": {
                "description": "Users can view all orders.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR VIEWING ORDERS",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/orders/cancel": {
            "patch": {
                "description": "Users can cancel orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR CANCELLING A ORDER",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the order details id",
                        "name": "orderdetailid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the status id",
                        "name": "statusid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/orders/detail": {
            "get": {
                "description": "Users can the selected order details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN USER"
                ],
                "summary": "API FOR VIEWING ORDERS DETAILS",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the order id",
                        "name": "orderid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/orders/return": {
            "patch": {
                "description": "Users can return orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR RETURNING A ORDER",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the order details id",
                        "name": "orderdetailid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the status id",
                        "name": "statusid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/products": {
            "get": {
                "description": "LISTING ALL PRODUCTS FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN USER"
                ],
                "summary": "API FOR LISTING ALL PRODUCTS",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/products/{productid}": {
            "get": {
                "description": "LISTING ALL PRODUCTS DETAILS FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN USER"
                ],
                "summary": "API FOR LISTING PRODUCTS DETAILS BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id that you would like to see the details of",
                        "name": "productid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "description": "VIEW USER PROFILE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR VIEW PROFILE",
                "operationId": "USER-PROFILE VIEEW",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/profile/address": {
            "get": {
                "description": "LISTING ALL ADDRESSES FOR THE PARTICULAR USER",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR LISTING ADDRESSES",
                "operationId": "USER-LIST-ADDRESS",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/profile/address/add": {
            "post": {
                "description": "ADDING NEW ADDRESS TO USER PROFILE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR ADDING ADDRESS",
                "operationId": "USER-ADD-ADDRESS",
                "parameters": [
                    {
                        "description": "Add the address details",
                        "name": "address_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.AddAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/profile/edit/profile": {
            "patch": {
                "description": "EDIT/UPDATE USER PROFILE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR EDIT PROFILE",
                "operationId": "USER-PROFILE EDIT",
                "parameters": [
                    {
                        "description": "Edit the details as per wish",
                        "name": "update_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.EditProfileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "description": "CREATE A NEW USER WITH REQUIRED DETAILS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR NEW USER SIGN UP",
                "operationId": "SIGNUP-USER",
                "parameters": [
                    {
                        "description": "New user Details",
                        "name": "user_details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/utils.BodySignUpuser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/signup/otp/verify": {
            "post": {
                "description": "VERIFY THE OTP AND UPDATE THE VERIFIED COLUMN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR NEW USER SIGN UP OTP VERIFICATION",
                "operationId": "SIGNUP-USER-OTP-VERIFY",
                "parameters": [
                    {
                        "description": "otp",
                        "name": "otp_details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/utils.Otpverify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/wallet": {
            "get": {
                "description": "VIEWING THE WALLET FROM USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR VIEWING THE WALLER",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "utils.AddAddress": {
            "type": "object",
            "required": [
                "city",
                "country",
                "housename",
                "pincode",
                "state",
                "street"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "housename": {
                    "type": "string"
                },
                "pincode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "utils.AddCategory": {
            "type": "object",
            "required": [
                "categoryname"
            ],
            "properties": {
                "categoryname": {
                    "type": "string"
                }
            }
        },
        "utils.AddProduct": {
            "type": "object",
            "required": [
                "categoryid",
                "image",
                "modelname"
            ],
            "properties": {
                "brandid": {
                    "type": "integer"
                },
                "categoryid": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "modelname": {
                    "type": "string"
                }
            }
        },
        "utils.AddProductDetail": {
            "type": "object",
            "required": [
                "availablecolourid",
                "availablesizeid",
                "price",
                "productid",
                "stock"
            ],
            "properties": {
                "availablecolourid": {
                    "type": "integer"
                },
                "availablesizeid": {
                    "type": "integer"
                },
                "discountid": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "productid": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "utils.BodyAddCoupon": {
            "type": "object",
            "required": [
                "code",
                "discount",
                "expdate",
                "type",
                "usagelimit"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "expdate": {
                    "type": "string"
                },
                "minorderamount": {
                    "type": "integer"
                },
                "productid": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "usagelimit": {
                    "type": "integer"
                }
            }
        },
        "utils.BodyLogin": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "utils.BodySignUpuser": {
            "type": "object",
            "required": [
                "confirmpassword",
                "email",
                "firstname",
                "lastname",
                "mobilenum",
                "password"
            ],
            "properties": {
                "confirmpassword": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "mobilenum": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 10
                },
                "password": {
                    "type": "string"
                },
                "referalcode": {
                    "type": "string"
                }
            }
        },
        "utils.EditProfileReq": {
            "type": "object",
            "required": [
                "email",
                "firstname",
                "lastname"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                }
            }
        },
        "utils.OtpLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "mobilenum": {
                    "type": "string"
                }
            }
        },
        "utils.Otpverify": {
            "type": "object",
            "required": [
                "otp"
            ],
            "properties": {
                "newpassword": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                },
                "otpid": {
                    "type": "string"
                },
                "referalcode": {
                    "type": "string"
                }
            }
        },
        "utils.ResWidgets": {
            "type": "object",
            "properties": {
                "numberofblockedusers": {
                    "type": "integer"
                },
                "numberofpendingorders": {
                    "type": "integer"
                },
                "numberofproducts": {
                    "type": "integer"
                },
                "numberofreturnsubmission": {
                    "type": "integer"
                }
            }
        },
        "utils.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "errors": {},
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "www.sportzone.cloud",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "SPORTZONE_E-COMMERCE REST API",
	Description:      "SPORTZONE_E-COMMERCE REST API built using Go, PSQL, REST API following Clean Architecture.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
